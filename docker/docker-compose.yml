services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: triuser
      POSTGRES_PASSWORD: tripass
      POSTGRES_DB: triathlon
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - miniodata:/data

  backend:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ../apps/backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgres://triuser:tripass@postgres:5432/triathlon
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ../apps/backend:/app
      - /app/node_modules
    command: ["pnpm", "run", "dev"]

  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ../apps/frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../apps/frontend:/app
      - /app/node_modules
    command: ["pnpm", "run", "dev"]

volumes:
  pgdata: {}
  miniodata: {}
